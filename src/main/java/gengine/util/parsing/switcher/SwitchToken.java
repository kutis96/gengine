package gengine.util.parsing.switcher;

import java.util.Arrays;
import java.util.Objects;

/**
 *
 * @author Richard Kutina <kutinric@fel.cvut.cz>
 */
public class SwitchToken {

    private final SwitchTemplate template;
    private final String switchString;
    private final String[] params;

    public SwitchToken(SwitchTemplate template, String switchString, String[] params) {
        this.template = template;
        this.switchString = switchString;
        this.params = params;
    }

    public SwitchTemplate getTemplate() {
        return this.template;
    }

    public String getString() {
        return this.switchString;
    }

    public String[] getParams() {
        return Arrays.copyOf(this.params, this.params.length);
    }

    @Override
    public String toString() {
        String r = this.switchString + "\t{";
        for (String s : this.params) {
            r += s + " ";
        }
        return r + "}";
    }

    @Override
    public boolean equals(Object obj) {
        //this thing could be actually way simplified by using hashCode checks
        if (!(obj instanceof SwitchToken)) {
            return false;
        }

        SwitchToken ext = (SwitchToken) obj;
        if (this.switchString.equals(ext.getString()) && ext.getParams().length == this.getParams().length) {
            for (int i = 0; i < this.params.length; i++) {
                if (!this.getParams()[i].equals(ext.getParams()[i])) {
                    return false;
                }
            }
        } else {
            return false;
        }
        return true;
    }

    /**
     * Generated by NetBeans
     *
     * @return
     */
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 11 * hash + Objects.hashCode(this.template);
        hash = 11 * hash + Objects.hashCode(this.switchString);
        hash = 11 * hash + Arrays.deepHashCode(this.params);
        return hash;
    }
}
